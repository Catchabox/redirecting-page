server {
    listen 443 ssl;
    http2 on;
    server_name domain_name;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/domain_name/fullchain.pem;    # 你的SSL证书路径
    ssl_certificate_key /etc/letsencrypt/live/domain_name/privkey.pem;  # 你的SSL密钥路径

    # 使用最新的 TLS 1.3 协议并禁用较旧的协议
    ssl_protocols TLSv1.3;

    # 推荐的 SSL 配置（增强安全性）
    ssl_prefer_server_ciphers off;

    # SSL 会话设置
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m; # 约40000会话
    ssl_session_tickets off;


    # 增加上传文件的大小限制
    #client_max_body_size 1024M;  # 设置最大上传大小为 50MB

    # 启用 OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # 启用 HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # 日志配置（可选）
    #access_log /var/log/nginx/domain_name.access.log;
    #error_log /var/log/nginx/domain_name.error.log;
    
    # Gzip压缩
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_comp_level 5;

    # 服务本地文件配置
    root /var/www/welcome;  # 指向你的欢迎页面目录
    index index.html;
    
    location / {
        try_files $uri $uri/ =404;
        error_page 404 /404.html;
        
        # 添加安全头部
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
        # add_header Content-Security-Policy "default-src 'self';";
        
        # 设置缓存控制头部
        add_header Cache-Control "public, max-age=3600";  # 缓存时间为1小时
        add_header Expires $http_expires;                 # 过期时间设置
    }

    # 如果想要进一步优化，可以考虑针对静态资源进行细分
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 30d;  # 例如图像、CSS、JS等资源设置更长的缓存时间
        add_header Cache-Control "public, max-age=2592000";  # 30天
    }
    # PHP管理
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;  # 根据你安装的版本调整
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
    }
}

server {
    listen 80;
    server_name domain_name;

    # 所有 HTTP 请求都跳转到 HTTPS
    return 301 https://$host$request_uri;
}